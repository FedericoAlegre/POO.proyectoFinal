
package proyecto_final.Views;

import java.util.logging.Level;
import java.util.logging.Logger;
import proyecto_final.Models.Relleno;
import proyecto_final.Models.Salsa;
import proyecto_final.Models.Tortilla;
import proyecto_final.controllers.RellenoController;
import proyecto_final.controllers.TortillaController;
import proyecto_final.controllers.SalsaController;

/**
 *
 * @author fedea
 */
public class CondimentsView extends javax.swing.JFrame {

    /**
     * Creates new form CondimentsView
     */
    public CondimentsView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        etNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        etPicor = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnNew = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnModify = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre:");

        jLabel2.setText("Picor");

        btnSave.setText("Guardar");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnNew.setText("Nuevo");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        jTable1.setModel(new CondimentsTableModel());
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTable1);

        btnDelete.setText("Borrar");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnModify.setText("Modificar");
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tortilla", "Relleno", "Salsa" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDelete)
                        .addGap(63, 63, 63)
                        .addComponent(btnModify)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(etPicor, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                                    .addComponent(etNombre))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)))
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSave)
                        .addGap(29, 29, 29)
                        .addComponent(btnNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(etNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(etPicor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnNew)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnModify))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//save
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String s = (String) this.jComboBox1.getSelectedItem();
        switch(s){
            case "Tortilla":
                this.saveTortilla();
                break;
            case "Salsa":
                this.saveSalsa();
                break;
            case "Relleno":
                this.saveRelleno();
        }
        this.emptyEditTexts();
        lockSaveComponents(false);
        this.btnDelete.setEnabled(true);
        this.btnModify.setEnabled(true);
        this.jTable1.updateUI();
    }//GEN-LAST:event_btnSaveActionPerformed
//new
    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        lockSaveComponents(true);
        this.emptyEditTexts();
        this.btnDelete.setEnabled(false);
        this.btnModify.setEnabled(false);

    }//GEN-LAST:event_btnNewActionPerformed
//delete
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        
        int i =this.jTable1.getSelectedRow();
        if(i>-1){
            String selec = (String) this.jComboBox1.getSelectedItem();
            switch(selec){
                case "Tortilla":
                    this.deleteTortilla(i);
                    break;
                case "Salsa":
                    this.deleteSalsa(i);
                    break;
                case "Relleno":
                    this.deleteRelleno(i);
            }
            this.jTable1.updateUI();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed
//modify
    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
        int row = jTable1.getSelectedRow();
        if(row>-1){
            String selec = (String) this.jComboBox1.getSelectedItem();
            switch(selec){
                case "Tortilla":
                    this.modifyTortilla(row);
                    break;
                case "Salsa":
                    this.modifySalsa(row);
                    break;
                case "Relleno":
                    this.modifyRelleno(row);
            }
            this.lockSaveComponents(true);
            this.btnDelete.setEnabled(false);
            this.btnModify.setEnabled(false);
        }
    }//GEN-LAST:event_btnModifyActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        String s = (String) this.jComboBox1.getSelectedItem();
        switch(s){
            case "Tortilla":{
                this.jTable1.setModel(new CondimentsTableModel());
                this.jTable1.updateUI();
                this.lockSaveComponents(false);
                break;
            }
            case "Salsa":{                
                this.jTable1.setModel(new SalsaTableModel());
                this.jTable1.updateUI();
                this.lockSaveComponents(false);
                break;
            }
            case "Relleno":{
                this.jTable1.setModel(new RellenoTableModel());
                this.jTable1.updateUI();
                this.lockSaveComponents(false);
                break;
            }
            
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed
    private void emptyEditTexts() {
        etNombre.setText("");
        etPicor.setText("");
        this.jLabel3.setText("");
    }
    

    private void lockSaveComponents(boolean l) {
        this.etNombre.setEnabled(l);
        this.etPicor.setEnabled(l);
        this.btnSave.setEnabled(l);
        
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CondimentsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CondimentsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CondimentsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CondimentsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CondimentsView().setVisible(true);                
            }
        });

    }
    
    Long id = 0L;
    private TortillaController tortillaController = new TortillaController();
    private SalsaController salsaController = new SalsaController();
    private RellenoController rellenoController= new RellenoController();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnModify;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JTextField etNombre;
    private javax.swing.JTextField etPicor;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    //Metodos de tortilla
    public void saveTortilla(){
        if(this.id == 0){
            if (!"".equals(etNombre.getText())) {
                try {
                    tortillaController.createTortilla(etNombre.getText());


                } catch (Exception e) {
                    this.jLabel3.setText(e.getMessage());
                }

            }
        }else{
            try {
                this.tortillaController.updateTortilla(this.etNombre.getText(), this.id);
            } catch (Exception ex) {
                Logger.getLogger(CondimentsView.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.id=0L;
        }
    }
    
    public void modifyTortilla(int row){
        Long idTortilla = (Long) this.jTable1.getValueAt(row, 0);
        Tortilla tortilla;
        try {
            tortilla = tortillaController.getTortilla(idTortilla);            
            this.etNombre.setText(tortilla.getNombre());
            this.id = tortilla.getId();
        } catch (Exception ex) {
            Logger.getLogger(CondimentsView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void deleteTortilla(int i){
        Long idT = (Long) this.jTable1.getValueAt(i, 0);
        try {
            tortillaController.deleteTortilla(idT);

        } catch (Exception ex) {
            Logger.getLogger(CondimentsView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    //metodos de Salsa
    public void saveSalsa(){
        if(this.id == 0){
            if (!"".equals(etNombre.getText())&&!"".equals(etPicor.getText())) {
                try {
                    salsaController.createSalsa(etNombre.getText(), Integer.parseInt(etPicor.getText()));


                } catch (Exception e) {
                    this.jLabel3.setText(e.getMessage());
                }

            }
        }else{
            try {
                this.salsaController.updateSalsa(this.etNombre.getText(), Integer.parseInt(this.etPicor.getText()), this.id);
            } catch (Exception ex) {
                Logger.getLogger(CondimentsView.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.id=0L;
        }
    }
    
    public void modifySalsa(int row){
        Long idSalsa = (Long) this.jTable1.getValueAt(row, 0);
            Salsa salsa;
            try {
                salsa = salsaController.getSalsa(idSalsa);            
                this.etNombre.setText(salsa.getNombre());
                this.etPicor.setText(Integer.toString(row));
                this.id = salsa.getId();
            } catch (Exception ex) {
                Logger.getLogger(CondimentsView.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
    public void deleteSalsa(int i){
        Long idS = (Long) this.jTable1.getValueAt(i, 0);
            try {
                salsaController.deleteSalsa(idS);

            } catch (Exception ex) {
                Logger.getLogger(CondimentsView.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
    //metodos de Relleno
    public void saveRelleno(){
        if(this.id == 0){
            if (!"".equals(etNombre.getText())) {
                try {
                    this.rellenoController.createRelleno(this.etNombre.getText());
                } catch (Exception e) {
                    this.jLabel3.setText(e.getMessage());
                }
            }
        }else{
            try {
                this.rellenoController.updateRelleno(this.etNombre.getText(), this.id);
            } catch (Exception ex) {
                Logger.getLogger(CondimentsView.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.id=0L;
        }
    }
    
    public void modifyRelleno(int row){
        Long idRelleno = (Long) this.jTable1.getValueAt(row, 0);
        Relleno relleno;
        try {
            relleno = this.rellenoController.getRelleno(idRelleno);
            this.etNombre.setText(relleno.getNombre());
            this.id = relleno.getId();
        } catch (Exception ex) {
            Logger.getLogger(CondimentsView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void deleteRelleno(int i){
        Long idT = (Long) this.jTable1.getValueAt(i, 0);
        try {
            this.rellenoController.deleteRelleno(idT);

        } catch (Exception ex) {
            Logger.getLogger(CondimentsView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
